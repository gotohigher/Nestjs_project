/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Application registration request
 *
 */
class ServerRegistrationRequestApiModel {
  /**
   * Create a ServerRegistrationRequestApiModel.
   * @property {string} discoveryUrl Discovery url to use for registration
   * @property {string} [id] Registration id
   * @property {object} [callback] An optional callback hook to register.
   * @property {string} [callback.uri] Uri to call - should use https scheme in
   * which
   * case security is enforced.
   * @property {string} [callback.method] Http Method to use for callback.
   * Possible values include: 'Get', 'Post', 'Put', 'Delete'
   * @property {string} [callback.authenticationHeader] Authentication header
   * to add or null if not needed
   * @property {object} [activationFilter] Upon discovery, activate all
   * endpoints with this filter.
   * @property {array} [activationFilter.trustLists] Certificate trust list
   * identifiers to use for
   * activation, if null, all certificates are
   * trusted.  If empty list, no certificates are
   * trusted which is equal to no filter.
   * @property {array} [activationFilter.securityPolicies] Endpoint security
   * policies to filter against.
   * If set to null, all policies are in scope.
   * @property {string} [activationFilter.securityMode] Security mode level to
   * activate. If null,
   * then Microsoft.Azure.IIoT.OpcUa.Registry.Models.SecurityMode.Best is
   * assumed. Possible values include: 'Best', 'Sign', 'SignAndEncrypt', 'None'
   */
  constructor() {
  }

  /**
   * Defines the metadata of ServerRegistrationRequestApiModel
   *
   * @returns {object} metadata of ServerRegistrationRequestApiModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServerRegistrationRequestApiModel',
      type: {
        name: 'Composite',
        className: 'ServerRegistrationRequestApiModel',
        modelProperties: {
          discoveryUrl: {
            required: true,
            serializedName: 'discoveryUrl',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          callback: {
            required: false,
            serializedName: 'callback',
            type: {
              name: 'Composite',
              className: 'CallbackApiModel'
            }
          },
          activationFilter: {
            required: false,
            serializedName: 'activationFilter',
            type: {
              name: 'Composite',
              className: 'EndpointActivationFilterApiModel'
            }
          }
        }
      }
    };
  }
}

module.exports = ServerRegistrationRequestApiModel;
