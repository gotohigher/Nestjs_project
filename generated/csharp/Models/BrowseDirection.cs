// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Twin.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for BrowseDirection.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum BrowseDirection
    {
        [EnumMember(Value = "Forward")]
        Forward,
        [EnumMember(Value = "Backward")]
        Backward,
        [EnumMember(Value = "Both")]
        Both
    }
    internal static class BrowseDirectionEnumExtension
    {
        internal static string ToSerializedValue(this BrowseDirection? value)
        {
            return value == null ? null : ((BrowseDirection)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this BrowseDirection value)
        {
            switch( value )
            {
                case BrowseDirection.Forward:
                    return "Forward";
                case BrowseDirection.Backward:
                    return "Backward";
                case BrowseDirection.Both:
                    return "Both";
            }
            return null;
        }

        internal static BrowseDirection? ParseBrowseDirection(this string value)
        {
            switch( value )
            {
                case "Forward":
                    return BrowseDirection.Forward;
                case "Backward":
                    return BrowseDirection.Backward;
                case "Both":
                    return BrowseDirection.Both;
            }
            return null;
        }
    }
}
