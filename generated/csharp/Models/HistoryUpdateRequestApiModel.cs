// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.IIoT.Opc.Twin.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Request node history update
    /// </summary>
    public partial class HistoryUpdateRequestApiModel
    {
        /// <summary>
        /// Initializes a new instance of the HistoryUpdateRequestApiModel
        /// class.
        /// </summary>
        public HistoryUpdateRequestApiModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HistoryUpdateRequestApiModel
        /// class.
        /// </summary>
        /// <param name="request">The HistoryUpdateDetailsType extension object
        /// encoded in json and containing the tunneled
        /// update request for the Historian server.</param>
        /// <param name="header">Optional request header</param>
        public HistoryUpdateRequestApiModel(object request, RequestHeaderApiModel header = default(RequestHeaderApiModel))
        {
            Request = request;
            Header = header;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the HistoryUpdateDetailsType extension object
        /// encoded in json and containing the tunneled
        /// update request for the Historian server.
        /// </summary>
        [JsonProperty(PropertyName = "request")]
        public object Request { get; set; }

        /// <summary>
        /// Gets or sets optional request header
        /// </summary>
        [JsonProperty(PropertyName = "header")]
        public RequestHeaderApiModel Header { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Request == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Request");
            }
        }
    }
}
