/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.azure.iiot.opc.twin.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Browse request model.
 */
public class BrowseRequestApiModel {
    /**
     * Node to browse.
     * (default: RootFolder).
     */
    @JsonProperty(value = "nodeId")
    private String nodeId;

    /**
     * Direction to browse in
     * (default: forward). Possible values include: 'Forward', 'Backward',
     * 'Both'.
     */
    @JsonProperty(value = "direction")
    private BrowseDirection direction;

    /**
     * View to browse
     * (default: null = new view = All nodes).
     */
    @JsonProperty(value = "view")
    private BrowseViewApiModel view;

    /**
     * Reference types to browse.
     * (default: hierarchical).
     */
    @JsonProperty(value = "referenceTypeId")
    private String referenceTypeId;

    /**
     * Whether to include subtypes of the reference type.
     * (default is false).
     */
    @JsonProperty(value = "noSubtypes")
    private Boolean noSubtypes;

    /**
     * Max number of references to return. There might
     * be less returned as this is up to the client
     * restrictions.  Set to 0 to return no references
     * or target nodes.
     * (default is decided by client e.g. 60).
     */
    @JsonProperty(value = "maxReferencesToReturn")
    private Integer maxReferencesToReturn;

    /**
     * Whether to collapse all references into a set of
     * unique target nodes and not show reference
     * information.
     * (default is false).
     */
    @JsonProperty(value = "targetNodesOnly")
    private Boolean targetNodesOnly;

    /**
     * Whether to read variable values on target nodes.
     * (default is false).
     */
    @JsonProperty(value = "readVariableValues")
    private Boolean readVariableValues;

    /**
     * Optional User elevation.
     */
    @JsonProperty(value = "elevation")
    private CredentialApiModel elevation;

    /**
     * Optional diagnostics configuration.
     */
    @JsonProperty(value = "diagnostics")
    private DiagnosticsApiModel diagnostics;

    /**
     * Get node to browse.
     (default: RootFolder).
     *
     * @return the nodeId value
     */
    public String nodeId() {
        return this.nodeId;
    }

    /**
     * Set node to browse.
     (default: RootFolder).
     *
     * @param nodeId the nodeId value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }

    /**
     * Get direction to browse in
     (default: forward). Possible values include: 'Forward', 'Backward', 'Both'.
     *
     * @return the direction value
     */
    public BrowseDirection direction() {
        return this.direction;
    }

    /**
     * Set direction to browse in
     (default: forward). Possible values include: 'Forward', 'Backward', 'Both'.
     *
     * @param direction the direction value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withDirection(BrowseDirection direction) {
        this.direction = direction;
        return this;
    }

    /**
     * Get view to browse
     (default: null = new view = All nodes).
     *
     * @return the view value
     */
    public BrowseViewApiModel view() {
        return this.view;
    }

    /**
     * Set view to browse
     (default: null = new view = All nodes).
     *
     * @param view the view value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withView(BrowseViewApiModel view) {
        this.view = view;
        return this;
    }

    /**
     * Get reference types to browse.
     (default: hierarchical).
     *
     * @return the referenceTypeId value
     */
    public String referenceTypeId() {
        return this.referenceTypeId;
    }

    /**
     * Set reference types to browse.
     (default: hierarchical).
     *
     * @param referenceTypeId the referenceTypeId value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withReferenceTypeId(String referenceTypeId) {
        this.referenceTypeId = referenceTypeId;
        return this;
    }

    /**
     * Get whether to include subtypes of the reference type.
     (default is false).
     *
     * @return the noSubtypes value
     */
    public Boolean noSubtypes() {
        return this.noSubtypes;
    }

    /**
     * Set whether to include subtypes of the reference type.
     (default is false).
     *
     * @param noSubtypes the noSubtypes value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withNoSubtypes(Boolean noSubtypes) {
        this.noSubtypes = noSubtypes;
        return this;
    }

    /**
     * Get max number of references to return. There might
     be less returned as this is up to the client
     restrictions.  Set to 0 to return no references
     or target nodes.
     (default is decided by client e.g. 60).
     *
     * @return the maxReferencesToReturn value
     */
    public Integer maxReferencesToReturn() {
        return this.maxReferencesToReturn;
    }

    /**
     * Set max number of references to return. There might
     be less returned as this is up to the client
     restrictions.  Set to 0 to return no references
     or target nodes.
     (default is decided by client e.g. 60).
     *
     * @param maxReferencesToReturn the maxReferencesToReturn value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withMaxReferencesToReturn(Integer maxReferencesToReturn) {
        this.maxReferencesToReturn = maxReferencesToReturn;
        return this;
    }

    /**
     * Get whether to collapse all references into a set of
     unique target nodes and not show reference
     information.
     (default is false).
     *
     * @return the targetNodesOnly value
     */
    public Boolean targetNodesOnly() {
        return this.targetNodesOnly;
    }

    /**
     * Set whether to collapse all references into a set of
     unique target nodes and not show reference
     information.
     (default is false).
     *
     * @param targetNodesOnly the targetNodesOnly value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withTargetNodesOnly(Boolean targetNodesOnly) {
        this.targetNodesOnly = targetNodesOnly;
        return this;
    }

    /**
     * Get whether to read variable values on target nodes.
     (default is false).
     *
     * @return the readVariableValues value
     */
    public Boolean readVariableValues() {
        return this.readVariableValues;
    }

    /**
     * Set whether to read variable values on target nodes.
     (default is false).
     *
     * @param readVariableValues the readVariableValues value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withReadVariableValues(Boolean readVariableValues) {
        this.readVariableValues = readVariableValues;
        return this;
    }

    /**
     * Get optional User elevation.
     *
     * @return the elevation value
     */
    public CredentialApiModel elevation() {
        return this.elevation;
    }

    /**
     * Set optional User elevation.
     *
     * @param elevation the elevation value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withElevation(CredentialApiModel elevation) {
        this.elevation = elevation;
        return this;
    }

    /**
     * Get optional diagnostics configuration.
     *
     * @return the diagnostics value
     */
    public DiagnosticsApiModel diagnostics() {
        return this.diagnostics;
    }

    /**
     * Set optional diagnostics configuration.
     *
     * @param diagnostics the diagnostics value to set
     * @return the BrowseRequestApiModel object itself.
     */
    public BrowseRequestApiModel withDiagnostics(DiagnosticsApiModel diagnostics) {
        this.diagnostics = diagnostics;
        return this;
    }

}
