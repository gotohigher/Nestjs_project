# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ValueWriteRequestApiModel(Model):
    """Value write request model.

    :param node_id: Node id to to write value to. (Mandatory)
    :type node_id: str
    :param value: Value to write. The system tries to convert
     the value according to the data type value,
     e.g. convert comma seperated value strings
     into arrays.  (Mandatory)
    :type value: object
    :param data_type: A built in datatype for the value. This can
     be a data type from browse, or a built in
     type.
     (default: best effort)
    :type data_type: str
    :param index_range: Index range to write
    :type index_range: str
    :param elevation: Optional User elevation
    :type elevation: ~azure-iiot-opc-twin.models.CredentialApiModel
    :param diagnostics: Optional diagnostics configuration
    :type diagnostics: ~azure-iiot-opc-twin.models.DiagnosticsApiModel
    """

    _validation = {
        'node_id': {'required': True},
        'value': {'required': True},
    }

    _attribute_map = {
        'node_id': {'key': 'nodeId', 'type': 'str'},
        'value': {'key': 'value', 'type': 'object'},
        'data_type': {'key': 'dataType', 'type': 'str'},
        'index_range': {'key': 'indexRange', 'type': 'str'},
        'elevation': {'key': 'elevation', 'type': 'CredentialApiModel'},
        'diagnostics': {'key': 'diagnostics', 'type': 'DiagnosticsApiModel'},
    }

    def __init__(self, node_id, value, data_type=None, index_range=None, elevation=None, diagnostics=None):
        super(ValueWriteRequestApiModel, self).__init__()
        self.node_id = node_id
        self.value = value
        self.data_type = data_type
        self.index_range = index_range
        self.elevation = elevation
        self.diagnostics = diagnostics
