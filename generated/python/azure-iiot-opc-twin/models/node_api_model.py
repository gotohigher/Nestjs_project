# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class NodeApiModel(Model):
    """node model.

    :param node_class: Type of node. Possible values include: 'Object',
     'Variable', 'Method', 'ObjectType', 'VariableType', 'ReferenceType',
     'DataType', 'View'
    :type node_class: str or ~azure-iiot-opc-twin.models.NodeClass
    :param display_name: Display name
    :type display_name: str
    :param id: Id of node.
     (Mandatory).
    :type id: str
    :param description: Description if any
    :type description: str
    :param children: Whether node has children which are defined as
     any forward hierarchical references.
     (default: unknown)
    :type children: bool
    :param name: Browse name
    :type name: str
    :param access_restrictions: Node access restrictions if any.
     (default: none). Possible values include: 'SigningRequired',
     'EncryptionRequired', 'SessionRequired'
    :type access_restrictions: str or
     ~azure-iiot-opc-twin.models.NodeAccessRestrictions
    :param write_mask: Default write mask for the node
     (default: 0)
    :type write_mask: int
    :param user_write_mask: User write mask for the node
     (default: 0)
    :type user_write_mask: int
    :param is_abstract: Whether type is abstract, if type can
     be abstract.  Null if not type node.
     (default: false)
    :type is_abstract: bool
    :param contains_no_loops: Whether a view contains loops. Null if
     not a view.
    :type contains_no_loops: bool
    :param event_notifier: If object or view and eventing, event notifier
     to subscribe to.
     (default: no events supported). Possible values include:
     'SubscribeToEvents', 'HistoryRead', 'HistoryWrite'
    :type event_notifier: str or ~azure-iiot-opc-twin.models.NodeEventNotifier
    :param executable: If method node class, whether method can
     be called.
    :type executable: bool
    :param user_executable: If method node class, whether method can
     be called by current user.
     (default: false if not executable)
    :type user_executable: bool
    :param data_type_definition: Data type definition in case node is a
     data type node and definition is available,
     otherwise null.
    :type data_type_definition: object
    :param access_level: Default access level for variable node.
     (default: 0). Possible values include: 'CurrentRead', 'CurrentWrite',
     'HistoryRead', 'HistoryWrite', 'SemanticChange', 'StatusWrite',
     'TimestampWrite', 'NonatomicRead', 'NonatomicWrite', 'WriteFullArrayOnly'
    :type access_level: str or ~azure-iiot-opc-twin.models.NodeAccessLevel
    :param user_access_level: User access level for variable node or null.
     (default: 0). Possible values include: 'CurrentRead', 'CurrentWrite',
     'HistoryRead', 'HistoryWrite', 'SemanticChange', 'StatusWrite',
     'TimestampWrite', 'NonatomicRead', 'NonatomicWrite', 'WriteFullArrayOnly'
    :type user_access_level: str or
     ~azure-iiot-opc-twin.models.NodeAccessLevel
    :param data_type: If variable the datatype of the variable.
     (default: null)
    :type data_type: str
    :param value_rank: Value rank of the variable data of a variable
     or variable type, otherwise null.
     (default: scalar = -1). Possible values include: 'ScalarOrOneDimension',
     'Any', 'Scalar', 'OneOrMoreDimensions', 'OneDimension', 'TwoDimensions'
    :type value_rank: str or ~azure-iiot-opc-twin.models.NodeValueRank
    :param array_dimensions: Array dimensions of variable or variable type.
     (default: empty array)
    :type array_dimensions: list[int]
    :param historizing: Whether the value of a variable is historizing.
     (default: false)
    :type historizing: bool
    :param minimum_sampling_interval: Minimum sampling interval for the
     variable
     value, otherwise null if not a variable node.
     (default: null)
    :type minimum_sampling_interval: float
    :param value: Value of variable or default value of the
     subtyped variable in case node is a variable
     type, otherwise null.
    :type value: object
    :param inverse_name: Inverse name of the reference if the node is
     a reference type, otherwise null.
    :type inverse_name: str
    :param symmetric: Whether the reference is symmetric in case
     the node is a reference type, otherwise
     null.
    :type symmetric: bool
    :param role_permissions: Role permissions
    :type role_permissions:
     list[~azure-iiot-opc-twin.models.RolePermissionApiModel]
    :param user_role_permissions: User Role permissions
    :type user_role_permissions:
     list[~azure-iiot-opc-twin.models.RolePermissionApiModel]
    """

    _validation = {
        'id': {'required': True},
    }

    _attribute_map = {
        'node_class': {'key': 'nodeClass', 'type': 'NodeClass'},
        'display_name': {'key': 'displayName', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'children': {'key': 'children', 'type': 'bool'},
        'name': {'key': 'name', 'type': 'str'},
        'access_restrictions': {'key': 'accessRestrictions', 'type': 'NodeAccessRestrictions'},
        'write_mask': {'key': 'writeMask', 'type': 'int'},
        'user_write_mask': {'key': 'userWriteMask', 'type': 'int'},
        'is_abstract': {'key': 'isAbstract', 'type': 'bool'},
        'contains_no_loops': {'key': 'containsNoLoops', 'type': 'bool'},
        'event_notifier': {'key': 'eventNotifier', 'type': 'NodeEventNotifier'},
        'executable': {'key': 'executable', 'type': 'bool'},
        'user_executable': {'key': 'userExecutable', 'type': 'bool'},
        'data_type_definition': {'key': 'dataTypeDefinition', 'type': 'object'},
        'access_level': {'key': 'accessLevel', 'type': 'NodeAccessLevel'},
        'user_access_level': {'key': 'userAccessLevel', 'type': 'NodeAccessLevel'},
        'data_type': {'key': 'dataType', 'type': 'str'},
        'value_rank': {'key': 'valueRank', 'type': 'NodeValueRank'},
        'array_dimensions': {'key': 'arrayDimensions', 'type': '[int]'},
        'historizing': {'key': 'historizing', 'type': 'bool'},
        'minimum_sampling_interval': {'key': 'minimumSamplingInterval', 'type': 'float'},
        'value': {'key': 'value', 'type': 'object'},
        'inverse_name': {'key': 'inverseName', 'type': 'str'},
        'symmetric': {'key': 'symmetric', 'type': 'bool'},
        'role_permissions': {'key': 'rolePermissions', 'type': '[RolePermissionApiModel]'},
        'user_role_permissions': {'key': 'userRolePermissions', 'type': '[RolePermissionApiModel]'},
    }

    def __init__(self, id, node_class=None, display_name=None, description=None, children=None, name=None, access_restrictions=None, write_mask=None, user_write_mask=None, is_abstract=None, contains_no_loops=None, event_notifier=None, executable=None, user_executable=None, data_type_definition=None, access_level=None, user_access_level=None, data_type=None, value_rank=None, array_dimensions=None, historizing=None, minimum_sampling_interval=None, value=None, inverse_name=None, symmetric=None, role_permissions=None, user_role_permissions=None):
        super(NodeApiModel, self).__init__()
        self.node_class = node_class
        self.display_name = display_name
        self.id = id
        self.description = description
        self.children = children
        self.name = name
        self.access_restrictions = access_restrictions
        self.write_mask = write_mask
        self.user_write_mask = user_write_mask
        self.is_abstract = is_abstract
        self.contains_no_loops = contains_no_loops
        self.event_notifier = event_notifier
        self.executable = executable
        self.user_executable = user_executable
        self.data_type_definition = data_type_definition
        self.access_level = access_level
        self.user_access_level = user_access_level
        self.data_type = data_type
        self.value_rank = value_rank
        self.array_dimensions = array_dimensions
        self.historizing = historizing
        self.minimum_sampling_interval = minimum_sampling_interval
        self.value = value
        self.inverse_name = inverse_name
        self.symmetric = symmetric
        self.role_permissions = role_permissions
        self.user_role_permissions = user_role_permissions
