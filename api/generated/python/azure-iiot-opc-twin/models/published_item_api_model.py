# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PublishedItemApiModel(Model):
    """A monitored and published item.

    :param node_id: Node to monitor
    :type node_id: str
    :param browse_path: An optional path from NodeId instance to
     the actual node.
    :type browse_path: list[str]
    :param node_attribute: Attribute to monitor. Possible values include:
     'NodeClass', 'BrowseName', 'DisplayName', 'Description', 'WriteMask',
     'UserWriteMask', 'IsAbstract', 'Symmetric', 'InverseName',
     'ContainsNoLoops', 'EventNotifier', 'Value', 'DataType', 'ValueRank',
     'ArrayDimensions', 'AccessLevel', 'UserAccessLevel',
     'MinimumSamplingInterval', 'Historizing', 'Executable', 'UserExecutable',
     'DataTypeDefinition', 'RolePermissions', 'UserRolePermissions',
     'AccessRestrictions'
    :type node_attribute: str or ~azure-iiot-opc-twin.models.NodeAttribute
    :param publishing_interval: Publishing interval to use
    :type publishing_interval: int
    :param sampling_interval: Sampling interval to use
    :type sampling_interval: int
    """

    _validation = {
        'node_id': {'required': True},
    }

    _attribute_map = {
        'node_id': {'key': 'nodeId', 'type': 'str'},
        'browse_path': {'key': 'browsePath', 'type': '[str]'},
        'node_attribute': {'key': 'nodeAttribute', 'type': 'NodeAttribute'},
        'publishing_interval': {'key': 'publishingInterval', 'type': 'int'},
        'sampling_interval': {'key': 'samplingInterval', 'type': 'int'},
    }

    def __init__(self, node_id, browse_path=None, node_attribute=None, publishing_interval=None, sampling_interval=None):
        super(PublishedItemApiModel, self).__init__()
        self.node_id = node_id
        self.browse_path = browse_path
        self.node_attribute = node_attribute
        self.publishing_interval = publishing_interval
        self.sampling_interval = sampling_interval
